[tool.poetry]
name = "{{ cookiecutter.project_slug }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>", ]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}"
repository = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.repo_name }}"
include = ["{{ cookiecutter.project_slug }}/py.typed"]
classifiers = [ "Framework :: Pytest",
                "License :: OSI Approved :: MIT License",
                "Natural Language :: English",
                "Operating System :: Unix",
                "Programming Language :: Python :: 3 :: Only",
                "Programming Language :: Python :: 3.10",
                "Programming Language :: Python :: 3.8",
                "Programming Language :: Python :: 3.9",
                "Programming Language :: Python",
                "Topic :: Utilities",
]
keywords = []

# end-user dependencies --------------------------------------------------------
[tool.poetry.dependencies]
python = "^3.8"

bubop = "*"
click = "*"

# dev dependencies -------------------------------------------------------------
[tool.poetry.dev-dependencies]
black = { version = "*", allow-prereleases = true }
isort = "*"
mock = "*"
pdbpp = "*"
pylint = "*"
pytest = "*"
rope = "*"
types-setuptools = "*"
pyright = "*"
mypy = "*"
coverage = "*"
coveralls = "*"

[tool.poetry.scripts]
{{ cookiecutter.project_slug }}_executable = "{{ cookiecutter.project_slug }}.scripts.myexecutable:main"

# isort ------------------------------------------------------------------------
[tool.isort]
line_length = 95
include_trailing_comma = true
multi_line_output = 3
# black ------------------------------------------------------------------------
[tool.black]
experimental-string-processing = true
line-length = 95
target-version = ['py38', 'py39']
include = '\.pyi?$'

# mypy -------------------------------------------------------------------------
[tool.mypy]
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = false

[[tool.mypy.overrides]]
module = ["tqdm", "pytest", "pexpect"]
ignore_missing_imports = true

# pylint -----------------------------------------------------------------------
[tool.pylint]
[tool.pylint.master]
persistent = "yes"
suggestion-mode = "yes"
unsafe-load-any-extension = "no"
ignore = "VCS"

[tool.pylint.messages_control]
disable = "C0330,C0326,C0103,W0613,R0201,R1720,R1705,W0104,C0301"

[tool.pylint.refactoring]
max-nested-blocks = 5
never-returning-functions = "sys.exit,argparse.parse_error"

[tool.pylint.similarities]
ignore-comments = "yes"
ignore-docstrings = "no"
ignore-imports = "yes"
# ignore-signatures=no
min-similarity-lines = 4

[tool.pylint.format]
max-line-length = 95
ignore-invalid-name = true
max-module-lines = 500

[tool.pylint.string]
check-quote-consistency = "yes"

# pyright ----------------------------------------------------------------------
[tool.pyright]
reportMissingImports = true
reportMissingTypeStubs = false
pythonVersion = "3.8"
pythonPlatform = "Linux"

# pytest -----------------------------------------------------------------------
[tool.pytest.ini_options]
addopts = "--ignore=quickstart* --doctest-modules"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

# vim: tw=80
